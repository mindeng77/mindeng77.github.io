<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://mindeng77.github.io/</id><title>개발오빠</title><subtitle>교회오빠를 이길 수 없는 개발오빠...ㅡㅡ</subtitle> <updated>2023-09-01T14:50:19+09:00</updated> <author> <name>devobba</name> <uri>https://mindeng77.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://mindeng77.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://mindeng77.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 devobba </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>refresh token으로 access token발급</title><link href="https://mindeng77.github.io/posts/refresh-token%EC%9C%BC%EB%A1%9C-access-token%EB%B0%9C%EA%B8%89/" rel="alternate" type="text/html" title="refresh token으로 access token발급" /><published>2023-09-01T13:55:00+09:00</published> <updated>2023-09-01T14:49:37+09:00</updated> <id>https://mindeng77.github.io/posts/refresh-token%EC%9C%BC%EB%A1%9C-access-token%EB%B0%9C%EA%B8%89/</id> <content src="https://mindeng77.github.io/posts/refresh-token%EC%9C%BC%EB%A1%9C-access-token%EB%B0%9C%EA%B8%89/" /> <author> <name>devobba</name> </author> <category term="Javascript" /> <category term="React.js" /> <summary> axios로 요청시 401에러가 발생하면 가지고 있던 refresh token으로 요청 토큰 재발급 후 이전 요청 다시 요청 토큰 재발급 중복 요청 방지 axios.js import axios from "axios"; import store from "../stores"; import { setLoading } from "../stores/loadingSlice"; import { setIsLogout } from "../stores/logoutSlice"; const instance = axios.create({ baseURL: process.env.REACT_APP_API_URL, timeout: 1000 * 60, }); let isRefreshing = false; ... </summary> </entry> <entry><title>자주 쓰는 git 명령어</title><link href="https://mindeng77.github.io/posts/%EC%9E%90%EC%A3%BC-%EC%93%B0%EB%8A%94-git-%EB%AA%85%EB%A0%B9%EC%96%B4/" rel="alternate" type="text/html" title="자주 쓰는 git 명령어" /><published>2023-05-04T16:20:00+09:00</published> <updated>2023-05-04T16:20:00+09:00</updated> <id>https://mindeng77.github.io/posts/%EC%9E%90%EC%A3%BC-%EC%93%B0%EB%8A%94-git-%EB%AA%85%EB%A0%B9%EC%96%B4/</id> <content src="https://mindeng77.github.io/posts/%EC%9E%90%EC%A3%BC-%EC%93%B0%EB%8A%94-git-%EB%AA%85%EB%A0%B9%EC%96%B4/" /> <author> <name>devobba</name> </author> <category term="Tool" /> <summary> 상태 조회 git status git add git add는 Working Directory에 있는 변경된 파일들을 Staging Area에 올리는 명령어. # 현재 디렉토리 하위에 있는 모든 변경 사항 git add . # 디렉토리 위치에 상관없이 모든 변경 사항 git add -A # 특정 파일 git add src/page/index.html # 특정 파일 다수 git add src/page/index.html src/page/list.html # 특정 폴더 git add src/page git diff # Working Directory와 Staging Area의 비교 git diff # Staging Area와 Repository와 비교 git diff --staged ... </summary> </entry> <entry><title>npm package를 tgz로 압축하기</title><link href="https://mindeng77.github.io/posts/npm-package%EB%A5%BC-tgz%EB%A1%9C-%EC%95%95%EC%B6%95%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="npm package를 tgz로 압축하기" /><published>2023-05-04T16:20:00+09:00</published> <updated>2023-05-04T16:20:00+09:00</updated> <id>https://mindeng77.github.io/posts/npm-package%EB%A5%BC-tgz%EB%A1%9C-%EC%95%95%EC%B6%95%ED%95%98%EA%B8%B0/</id> <content src="https://mindeng77.github.io/posts/npm-package%EB%A5%BC-tgz%EB%A1%9C-%EC%95%95%EC%B6%95%ED%95%98%EA%B8%B0/" /> <author> <name>devobba</name> </author> <category term="Tool" /> <summary> nexus에 npm 패키지를 업로드하기 위해서 tgz파일로 압축을 해야하는데 npm으로는 방법을 찾지 못했는데, yarn으로 가능하다. /.yarnrc yarn-offline-mirror "./npm_packages" yarn-offline-mirror-pruning true 위의 파일을 만들고 yarn으로 패키지 설치를 하면 /npm_packages 폴더에 각 패키지들이 tgz파일로 만들어진다. </summary> </entry> <entry><title>axios에서 redux사용하기</title><link href="https://mindeng77.github.io/posts/axios%EC%97%90%EC%84%9C-redux%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="axios에서 redux사용하기" /><published>2023-04-26T17:31:00+09:00</published> <updated>2023-04-26T18:02:22+09:00</updated> <id>https://mindeng77.github.io/posts/axios%EC%97%90%EC%84%9C-redux%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</id> <content src="https://mindeng77.github.io/posts/axios%EC%97%90%EC%84%9C-redux%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/" /> <author> <name>devobba</name> </author> <category term="Javascript" /> <category term="React.js" /> <summary> 조건 서버 요청 중에 로딩바를 보여주고, 응답을 받으면 로딩바를 숨기고 싶다. redux로 로딩중 정보를 등록하여 관리 제약 컴포넌트가 아닌 영역에서 useSelector, useDispatch를 사용할 수 없다. 해결 None Component에서 직접 store정보에 접근하여 사용이 가능함 /src/store/loadingSlice.js import { createSlice } from "@reduxjs/toolkit"; export const loadingSlice = createSlice({ name: "loading", initialState: { isLoading: false, }, reducers: { setLoading: (st... </summary> </entry> <entry><title>window에서 base64 인코딩</title><link href="https://mindeng77.github.io/posts/window%EC%97%90%EC%84%9Cbase64/" rel="alternate" type="text/html" title="window에서 base64 인코딩" /><published>2023-04-25T16:20:00+09:00</published> <updated>2023-04-25T16:20:00+09:00</updated> <id>https://mindeng77.github.io/posts/window%EC%97%90%EC%84%9Cbase64/</id> <content src="https://mindeng77.github.io/posts/window%EC%97%90%EC%84%9Cbase64/" /> <author> <name>devobba</name> </author> <category term="Tool" /> <summary> Power Shell을 실행 다음 코드에서 인코딩할 부분 수정 후 실행 $plainText = "비밀번호" # 인코딩할 문자열 $base64Encoded = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($plainText)) $base64Encoded # 결과 출력 </summary> </entry> </feed>
